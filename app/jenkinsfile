pipeline {
    agent any

    environment {
        // Define environment variables
        DB_NAME="tickets"
        DB_USER="plat01"
        DB_PASSWORD="plat01@2020@"
        DB_ROOT_USERNAME="root"
        DB_ROOT_PASSWORD="plat01@2020@"

        DOCKER_COMPOSE_PATH = './docker-compose.yml'
    }

    stage('Setup Docker Compose') {
            steps {
                script {
                    // Install Docker Compose if not already installed
                    sh '''
                    if ! [ -x "$(command -v docker-compose)" ]; then
                        echo "Docker Compose not found, installing..."
                        sudo curl -L "https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                        sudo chmod +x /usr/local/bin/docker-compose
                    fi
                    '''
                }
            }
        }

    stages {
        stage('Checkout') {
            steps {
                // Checkout source code from the repository
                git branch: 'main', url: 'https://github.com/iftitutul/ci-cd-jenkins-demo.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    // Build Docker containers
                    sh 'docker-compose -f $DOCKER_COMPOSE_PATH build'
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    // Run tests, e.g., PHPUnit for PHP apps
                    sh 'docker-compose -f $DOCKER_COMPOSE_PATH run --rm php php /path/to/phpunit tests'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Bring up the application using Docker Compose
                    sh 'docker-compose -f $DOCKER_COMPOSE_PATH up -d'
                }
            }
        }
    }

    post {
        always {
            // Cleanup Docker resources after pipeline
            sh 'docker-compose -f $DOCKER_COMPOSE_PATH down'
        }
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed.'
        }
    }
}

